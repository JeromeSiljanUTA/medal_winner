* Grid Approximation of the Binomial Distribution
:PROPERTIES:
:header-args: :exports both :session
:END:

** Fix path stuff
#+BEGIN_SRC python
import sys
import os
src_dir = os.path.join(os.getcwd(), '..', 'src')
sys.path.append(src_dir)
#+END_SRC

#+RESULTS:
: None

** Imports
#+BEGIN_SRC python
import pandas as pd
import numpy as np

from matplotlib import use
import matplotlib.pyplot as plt
from d02_intermediate.transform_int_data import (
    clean_csv,
    get_total_rounds,
    get_total_wins,
)

use('GTK3Agg')
#+END_SRC

#+RESULTS:
: None

** Read csv
#+BEGIN_SRC python
df = clean_csv()
df
#+END_SRC

#+RESULTS:
#+begin_example
      Location  Year              Competitor   Round  Success
0        Cairo  2023         Xenos Dionysios    Semi     True
1        Cairo  2023           Amirali Didar    Semi    False
2        Cairo  2023         Da Costa Steven    Semi     True
3        Cairo  2023         Xenos Dionysios   Final    False
4        Cairo  2023         Da Costa Steven   Final     True
..         ...   ...                     ...     ...      ...
63  Matosinhos  2022  Almasatfa Abdel Rahman    Semi     True
64  Matosinhos  2022         Da Costa Steven    Semi     True
65  Matosinhos  2022  Almasatfa Abdel Rahman   Final    False
66  Matosinhos  2022         Da Costa Steven   Final     True
67  Matosinhos  2022       Aghalarzade Tural  Bronze    False

[68 rows x 5 columns]
#+end_example

** Make new df with total wins, rounds
#+BEGIN_SRC python
wins = get_total_wins(df)
rounds = get_total_rounds(df)
binomial_df = pd.DataFrame([wins, rounds]).T
binomial_df
#+END_SRC

#+RESULTS:
#+begin_example
                        Wins  Rounds
Competitor                          
Aghalarzade Tural          1       5
Almasatfa Abdel Rahman     7      10
Amirali Didar              5       8
Da Costa Steven            6       6
De Vivo Gianluca           4       5
Elsawy Ali                 6       8
Kozaki Yugo                2       5
Lotfy Ahmed                1       5
Tadissi Yves Martial       4       8
Xenos Dionysios            5       8
#+end_example

** Toy example Almasatfa Abdel Rahman

#+BEGIN_SRC python
probability_grid = np.linspace(0, 1, 21)
dist = binom.pmf(7, 10, probability_grid)
plt.plot(dist)
plt.show()
#+END_SRC

#+RESULTS:
: None


** DataFrame apply function to calculate distribution
#+BEGIN_SRC python
def generate_binomial_dist(win_stats: pd.Series) -> int:
    wins, rounds, = win_stats["Wins"], win_stats["Rounds"]

    # Try 21 probabilities
    probability_grid = np.linspace(0, 1, 21)
    dist = binom.pmf(wins, rounds, probability_grid)
    return dist
#+END_SRC

#+RESULTS:

